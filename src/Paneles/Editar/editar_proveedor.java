/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Paneles;

import static App.Menu.panelprincipal;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

public class editar_proveedor extends javax.swing.JPanel {

    /**
     * Creates new form Nueva_venta
     */
    public editar_proveedor() {
        initComponents();
        TextPrompt holder1 = new TextPrompt("####-####", txtnumerovendedor);
        TextPrompt holder2 = new TextPrompt("alguien@example.com", txtcorreo);
        TextPrompt holder3 = new TextPrompt("####-####", txtnumeroempresa);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtempresa = new javax.swing.JTextField();
        txtnumeroempresa = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtcorreo = new javax.swing.JTextField();
        txtnombrevendedor = new javax.swing.JTextField();
        txtnumerovendedor = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdire = new javax.swing.JTextArea();
        btnguardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1024, 640));

        txtempresa.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtempresa.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nombre de la empresa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 2, 12))); // NOI18N
        txtempresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtempresaActionPerformed(evt);
            }
        });
        txtempresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtempresaKeyTyped(evt);
            }
        });

        txtnumeroempresa.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtnumeroempresa.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Número de celular  o teléfono de la empresa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 2, 12))); // NOI18N
        txtnumeroempresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnumeroempresaActionPerformed(evt);
            }
        });
        txtnumeroempresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnumeroempresaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnumeroempresaKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Contacto del vendedor");

        txtcorreo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcorreo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Email", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 2, 12))); // NOI18N
        txtcorreo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcorreoFocusLost(evt);
            }
        });
        txtcorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcorreoActionPerformed(evt);
            }
        });
        txtcorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcorreoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcorreoKeyTyped(evt);
            }
        });

        txtnombrevendedor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtnombrevendedor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Nombre del vendedor", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 2, 12))); // NOI18N
        txtnombrevendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombrevendedorActionPerformed(evt);
            }
        });
        txtnombrevendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnombrevendedorKeyTyped(evt);
            }
        });

        txtnumerovendedor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtnumerovendedor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Número de celular ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 2, 12))); // NOI18N
        txtnumerovendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnumerovendedorActionPerformed(evt);
            }
        });
        txtnumerovendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnumerovendedorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnumerovendedorKeyTyped(evt);
            }
        });

        txtdire.setColumns(20);
        txtdire.setLineWrap(true);
        txtdire.setRows(5);
        txtdire.setWrapStyleWord(true);
        txtdire.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dirección ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 2, 12))); // NOI18N
        txtdire.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdireKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtdire);

        btnguardar.setBackground(new java.awt.Color(255, 153, 51));
        btnguardar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnguardar.setForeground(new java.awt.Color(0, 0, 0));
        btnguardar.setText("GUARDAR");
        btnguardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 102, 102));

        jLabel1.setFont(new java.awt.Font("Arial", 3, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Datos del Proveedor");

        jLabel2.setFont(new java.awt.Font("Goudy Old Style", 3, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("9801-4550/3308-9197");

        jLabel3.setFont(new java.awt.Font("Goudy Old Style", 3, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Trojes, El Paraiso");

        jButton6.setBackground(new java.awt.Color(255, 153, 51));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setText("VOLVER");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(43, 43, 43))
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Contacto de la empresa");

        txtid.setEditable(false);
        txtid.setBackground(new java.awt.Color(255, 255, 255));
        txtid.setForeground(new java.awt.Color(255, 255, 255));
        txtid.setBorder(null);
        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtcorreo)
                            .addComponent(txtempresa)
                            .addComponent(txtnumeroempresa)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtnombrevendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                                    .addComponent(txtnumerovendedor)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(btnguardar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 474, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(544, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtempresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnombrevendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnumerovendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnumeroempresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(66, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(179, 179, 179)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(440, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtempresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtempresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtempresaActionPerformed

    private void txtempresaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtempresaKeyTyped
        char c = evt.getKeyChar(); // Obtener el carácter ingresado

        if (txtempresa.getText().isEmpty() && Character.isWhitespace(c))
        {
            evt.consume(); // Consumir el evento si es un espacio en blanco en la primera letra
        } else if (txtempresa.getText().length() >= 80)
        {
            evt.consume(); // Consumir el evento si se ha alcanzado la longitud máxima
        }
    }//GEN-LAST:event_txtempresaKeyTyped

    private void txtnumeroempresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnumeroempresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumeroempresaActionPerformed

    private void txtnumeroempresaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnumeroempresaKeyTyped
           // Obtener el carácter que se está ingresando
        char c = evt.getKeyChar();

        // Validar que el carácter sea un número
        if (!Character.isDigit(c))
        {
            // Si no es un número, cancelar el evento
            evt.consume();
            return;
        }

        // Obtener el texto actual del campo de texto
        String texto = txtnumeroempresa.getText();

        // Validar que el primer carácter sea 9, 8, o 3
        if (texto.length() == 0 && (c != '9' && c != '8' && c != '3' && c != '2'))
        {
            // Si no es 9, 8, o 3, cancelar el evento
            evt.consume();
            return;
        }

        // Insertar un guion después del cuarto número
        if (texto.length() == 4)
        {
            txtnumeroempresa.setText(texto + "-");
        }

        // No permitir más de 9 caracteres
        if (texto.length() == 9)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtnumeroempresaKeyTyped

    private void txtcorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcorreoActionPerformed

    private void txtnombrevendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombrevendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombrevendedorActionPerformed

    private void txtnombrevendedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombrevendedorKeyTyped
        char c = evt.getKeyChar(); // Obtener el carácter ingresado

        if (txtnombrevendedor.getText().isEmpty() && (Character.isWhitespace(c) || Character.isDigit(c)))
        {
            evt.consume(); // Consumir el evento si es un espacio en blanco o un número en la primera letra
        } else if (txtnombrevendedor.getText().length() >= 80 || Character.isDigit(c))
        {
            evt.consume(); // Consumir el evento si se ha alcanzado la longitud máxima o si es un número
        }
    }//GEN-LAST:event_txtnombrevendedorKeyTyped

    private void txtnumerovendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnumerovendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumerovendedorActionPerformed

    private void txtnumerovendedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnumerovendedorKeyTyped
         // Obtener el carácter que se está ingresando
        char c = evt.getKeyChar();

        // Validar que el carácter sea un número
        if (!Character.isDigit(c))
        {
            // Si no es un número, cancelar el evento
            evt.consume();
            return;
        }

        // Obtener el texto actual del campo de texto
        String texto = txtnumerovendedor.getText();

        // Validar que el primer carácter sea 9, 8, o 3
        if (texto.length() == 0 && (c != '9' && c != '8' && c != '3'))
        {
            // Si no es 9, 8, o 3, cancelar el evento
            evt.consume();
            return;
        }

        // Insertar un guion después del cuarto número
        if (texto.length() == 4)
        {
            txtnumerovendedor.setText(texto + "-");
        }

        // No permitir más de 9 caracteres
        if (texto.length() == 9)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtnumerovendedorKeyTyped

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        String numeroempresa = txtnumeroempresa.getText().trim();
        String nombrevendedor = txtnombrevendedor.getText().trim();
        String empresa = txtempresa.getText().trim();
        String correo = txtcorreo.getText().trim();
        String telefono = txtnumerovendedor.getText().trim();
        String direccion = txtdire.getText().trim();

        StringBuilder camposVacios = new StringBuilder("Los siguientes campos están vacíos o no cumplen con los requisitos:");

        if (empresa.isEmpty())
        {
            camposVacios.append("\n - Nombre de la empresa");
        }

        if (numeroempresa.isEmpty())
        {
            camposVacios.append("\n - Número o teléfono de la empresa");
        } else if (numeroempresa.length() != 9)
        {
            camposVacios.append("\n - Número de empresa no cumple con los requisitos");
        }

        if (direccion.isEmpty())
        {
            camposVacios.append("\n - Dirección");
        }

        if (nombrevendedor.isEmpty())
        {
            camposVacios.append("\n - Nombre del vendedor");
        }

        if (telefono.isEmpty())
        {
            camposVacios.append("\n - Teléfono del vendedor");
        } else if (telefono.length() != 9)
        {
            camposVacios.append("\n - Número del vendedor no cumple con los requisitos");
        }

        if (!correo.isEmpty() && !correo.matches("^[A-Za-z0-9+_.-]+@.+\\.com$"))
        {
            camposVacios.append("\n - Correo no cumple con los requisitos");
        }

        if (!camposVacios.toString().equals("Los siguientes campos están vacíos o no cumplen con los requisitos:"))
        {
            JOptionPane.showMessageDialog(null, camposVacios.toString(), "Campos Vacíos", JOptionPane.ERROR_MESSAGE);
        } else
        {
            try
            {
                // Establece la conexión con la base de datos
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=GlendaDB;encrypt=true;trustServerCertificate=true;", "sa", "123456789");

                // Prepara la consulta SQL
                PreparedStatement ps = conn.prepareStatement("UPDATE proveedor SET nombreEmpresa = ?, nombreProveedor = ?, correo = ?, telefonoempresa = ?, telefonoproveedor = ?, direccion = ? WHERE id_proveedor = ?");
                int numeracion = Integer.parseInt(txtid.getText());
                ps.setString(1, empresa);
                ps.setString(2, nombrevendedor);
                ps.setString(3, correo);
                ps.setString(4, numeroempresa);
                ps.setString(5, telefono);
                ps.setString(6, direccion);
                ps.setInt(7, numeracion);

                // Ejecuta la actualización de la base de datos
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Registro actualizado");

                // Refresca la vista (si es necesario)
                listado_proveedores cli = new listado_proveedores();
                cli.setSize(1024, 640);
                cli.setLocation(0, 0);

                panelprincipal.revalidate();
                panelprincipal.repaint();
                panelprincipal.removeAll();
                panelprincipal.add(cli, BorderLayout.CENTER);
                panelprincipal.revalidate();
                panelprincipal.repaint();
            } catch (SQLException | ClassNotFoundException e)
            {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.toString());
            }
        }
    }//GEN-LAST:event_btnguardarActionPerformed

    private void txtcorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcorreoKeyTyped
        char c = evt.getKeyChar(); // Obtener el carácter ingresado

        if (!Character.isLetterOrDigit(c) && c != '@' && c != '.' && c != '&' && c != '#' && c != '$' && c != '?' && c != '-')
        {
            evt.consume(); // Consumir el evento si no es una letra, un número, '@' o '.'
        } else if (txtcorreo.getText().length() >= 30)
        {
            evt.consume(); // Consumir el evento si se ha alcanzado la longitud máxima
        }
    }//GEN-LAST:event_txtcorreoKeyTyped

    private void txtcorreoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcorreoFocusLost
//        String correo = txtcorreo.getText().trim();
//
//        if (isValidEmailAddress(correo))
//        {
//            // La dirección de correo electrónico es válida.
//            // Puedes realizar acciones adicionales aquí si es necesario.
//        } else
//        {
//            // La dirección de correo electrónico no es válida.
//            // Muestra un mensaje de error o realiza alguna acción de retroalimentación.
//            JOptionPane.showMessageDialog(null, "Correo electrónico no válido", "Error", JOptionPane.ERROR_MESSAGE);
//            txtcorreo.requestFocus(); // Devuelve el foco al campo de correo electrónico.
//        }
    }//GEN-LAST:event_txtcorreoFocusLost

    private void txtdireKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdireKeyTyped
        char c = evt.getKeyChar(); // Obtener el carácter ingresado

        if (txtdire.getText().isEmpty() && Character.isWhitespace(c))
        {
            evt.consume(); // Consumir el evento si es un espacio en blanco en la primera letra
        } else if (txtdire.getText().length() >= 300)
        {
            evt.consume(); // Consumir el evento si se ha alcanzado la longitud máxima
        }
    }//GEN-LAST:event_txtdireKeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        listado_proveedores l2 = new listado_proveedores();
        l2.setSize(1024, 640);
        l2.setLocation(0, 0);

        panelprincipal.removeAll();
        panelprincipal.add(l2, BorderLayout.CENTER);
        panelprincipal.revalidate();
        panelprincipal.repaint();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtcorreoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcorreoKeyReleased
//        String email = txtcorreo.getText(); // Obtiene el texto del campo de correo
//        String regex = "^[A-Za-z0-9+_.-]+@(.+)$";
//        Pattern pattern = Pattern.compile(regex);
//        Matcher matcher = pattern.matcher(email);
//
//        if (matcher.matches())
//        {
//            String successMessage = "<html><font color='green'>El email cumple con los requisitos</font></html>";
//            JOptionPane.showMessageDialog(this, successMessage, "Éxito", JOptionPane.INFORMATION_MESSAGE);
//        } else
//        {
//            String errorMessage = "<html><font color='red'>El email no cumple con los requisitos</font></html>";
//            JOptionPane.showMessageDialog(this, errorMessage, "Error", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_txtcorreoKeyReleased

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void txtnumeroempresaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnumeroempresaKeyReleased
         String texto = txtnumeroempresa.getText().trim();
        char c = evt.getKeyChar();

        if (texto.startsWith("9") || texto.startsWith("8") || texto.startsWith("3") || texto.startsWith("2") || c == 9 && c == 8 & c == 3 & c == 3) {
            txtnumeroempresa.setBackground(Color.green);
        } else {
            // El texto no cumple con la validación
            evt.consume(); // Bloquea el carácter
            JOptionPane.showMessageDialog(this, "El número de celular debe comenzar con 9, 8, 3 o 2", "Error", JOptionPane.ERROR_MESSAGE);
            txtnumeroempresa.setBackground(Color.red);
            txtnumeroempresa.setText("");
        }
    }//GEN-LAST:event_txtnumeroempresaKeyReleased

    private void txtnumerovendedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnumerovendedorKeyReleased
          String texto = txtnumerovendedor.getText().trim();
        char c = evt.getKeyChar();

        if (texto.startsWith("9") || texto.startsWith("8") || texto.startsWith("3") || c == 9 && c == 8 & c == 3) {
            txtnumerovendedor.setBackground(Color.green);
        } else {
            // El texto no cumple con la validación
            evt.consume(); // Bloquea el carácter
            JOptionPane.showMessageDialog(this, "El número de celular debe comenzar con 9, 8 o 3", "Error", JOptionPane.ERROR_MESSAGE);
            txtnumerovendedor.setBackground(Color.red);
            txtnumerovendedor.setText("");
        }
    }//GEN-LAST:event_txtnumerovendedorKeyReleased

//    public boolean isValidEmailAddress(String email) {
//        // Define una expresión regular para validar direcciones de correo electrónico.
//        // Esta es una implementación básica y puede necesitar ser ajustada.
//        String regex = "^[A-Za-z0-9+_.-]+@(.+)$";
//        Pattern pattern = Pattern.compile(regex);
//        Matcher matcher = pattern.matcher(email);
//        return matcher.matches();
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTextField txtcorreo;
    public javax.swing.JTextArea txtdire;
    public javax.swing.JTextField txtempresa;
    public javax.swing.JTextField txtid;
    public javax.swing.JTextField txtnombrevendedor;
    public javax.swing.JTextField txtnumeroempresa;
    public javax.swing.JTextField txtnumerovendedor;
    // End of variables declaration//GEN-END:variables
}
